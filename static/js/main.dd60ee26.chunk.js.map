{"version":3,"sources":["components/Header/index.jsx","store/todos/index.js","components/Deletebutton/index.jsx","components/Checkbox/index.jsx","components/Button/index.jsx","components/Input/index.jsx","components/Task/index.jsx","store/category/index.js","contextContext/index.js","store/modals/index.js","container/taskContainer.js","components/ProgressBar/index.jsx","components/SearchCategory/index.jsx","components/Category/index.jsx","container/categoryContainer.js","components/Profiile/index.jsx","components/Settings/index.jsx","components/User/index.jsx","pages/index.jsx","components/Modals/index.js","components/Modals/ModalDelete/index.jsx","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["Header","className","activeClassName","to","storageName","initState","task","localStorage","getItem","JSON","parse","actionType","actionDelTodo","payload","type","updateTasks","tasks","setItem","stringify","taskReducer","state","action","filter","todo","id","map","checked","Deletebutton","title","clickHandle","onClick","Checkbox","props","value","onChange","onchangeHandler","htmlFor","label","Button","disabled","name","Input","placeholder","e","Task","inputValue","onChangeInput","onAdd","todos","onCheck","onDel","todoID","onDelAllTasks","ref","actionModalDelete","useRef","length","liClass","aClass","category","actionDelCategory","updateCategories","cats","categoryReducer","categories","cat","Context","createContext","actionShowModal","actionHideModal","reducer","splice","TaskContainer","useSelector","dispatch","useDispatch","useContext","useState","change","setChange","target","data","Date","now","event","actionCheckTodo","modalText","deleteFunc","Progressbar","percent","maxPercent","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","SearchCategory","setValue","history","useHistory","url","URL","window","location","href","urlParams","URLSearchParams","search","get","setUrlValue","searchParams","set","replace","Category","taskPercents","CategoryContainer","useLocation","getValueSearch","useMemo","todoCategory","item","getCurrentCategories","useCallback","valueSearch","toLowerCase","includes","findCurrentCategories","actionCheckCategory","Profile","match","useRouteMatch","params","Provider","Settings","User","HomePage","path","component","modalCollections","ModalDelete","handlerHideModal","opacity","display","tabIndex","modalTitle","aria-label","aria-hidden","dangerouslySetInnerHTML","__html","Modals","modal","modalsReducer","CurrentModal","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd60ee26.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './styles.css'\r\nconst Header = () => {  \r\n  return (\r\n    <header className=\"bg-dark text-light\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>ToDo App alpha alpha version</p>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n              <div className=\"navbar-nav\">\r\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/user\">User</NavLink>\r\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/settings\">Settings</NavLink>\r\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/todos\">Todos</NavLink>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header;","const storageName = 'react-tasks';\r\n\r\nconst initState = {task: localStorage.getItem(storageName) ? JSON.parse(localStorage.getItem(storageName)) : []};\r\n\r\n\r\nconst actionType = {\r\n  ADD_TASK: 'ADD_TASK',\r\n  DEL_TASK: 'DEL_TASK',\r\n  CHECK_TASK: 'CHECK_TASK',\r\n  DELETE_ALL_TASKS: 'DELETE_ALL_TASKS'\r\n  // SET_TODOS: 'SET_TODOS'\r\n}\r\n\r\nexport const actionCreateTodo = (payload) => {\r\n  return {\r\n    type: actionType.ADD_TASK,\r\n    payload\r\n  }\r\n}\r\nexport const actionDelTodo = (payload) => {\r\n  return {\r\n    type: actionType.DEL_TASK,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const actionCheckTodo = (checked, id) => {\r\n  return {\r\n    type: actionType.CHECK_TASK,\r\n    checked,\r\n    id\r\n  }\r\n}\r\n\r\nexport const actionDeleteAllTasks = () => {\r\n  return {\r\n    type: actionType.DELETE_ALL_TASKS\r\n  }\r\n}\r\n\r\n\r\nconst updateTasks = (tasks) => {\r\n  localStorage.setItem(storageName, JSON.stringify(tasks));\r\n}\r\n\r\n\r\n// const actionSetTodos = (payload) => {\r\n//   console.log(payload);\r\n//   return {\r\n//     type: actionType.SET_TODOS,\r\n//     payload\r\n//   }\r\n// }\r\n\r\nconst taskReducer = (state = initState, action) => {\r\n  let tasks;\r\n  switch (action.type){\r\n    case actionType.ADD_TASK:\r\n      tasks = {...state, task: [...state.task, action.payload]};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    case actionType.DEL_TASK:\r\n      tasks = {...state, task: state.task.filter((todo) => {\r\n        if(todo.id !== action.payload)\r\n          return todo;\r\n        else\r\n          return false;\r\n      })};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    case actionType.CHECK_TASK:\r\n      tasks = {...state, task: state.task.map((todo) => {\r\n        if(todo.id === action.id)\r\n          todo.checked = action.checked\r\n        \r\n        return todo;\r\n      })};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    // case actionType.SET_TODOS:\r\n    //   return {...state, task: [...state.task, ...action.payload]}\r\n    case actionType.DELETE_ALL_TASKS:\r\n      tasks = {...state, task: []};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// export const getTodosThunk = () => (dispatch) => {\r\n//   try{  \r\n//     fetch('https://jsonplaceholder.typicode.com/todos/')\r\n//       .then(response => response.json())\r\n//       .then(json => dispatch(actionSetTodos(json)));\r\n//   }catch(e){\r\n//     console.log(e);\r\n//   }\r\n// } \r\n\r\nexport default taskReducer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Deletebutton = ({title = 'удалить', clickHandle}) => {\r\n  return (\r\n    <button className=\"btn btn-danger\" title={title} onClick={clickHandle}>\r\n      <i className=\"bi bi-trash\"></i>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Deletebutton;\r\n\r\nDeletebutton.propTypes = {\r\n  title: PropTypes.string,\r\n  clickHandle: PropTypes.func\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Checkbox = (props) => {\r\n  return (\r\n  <div className=\"form-check\">\r\n    <input className=\"form-check-input\" type=\"checkbox\" checked={props.checked ? 'checked': ''} value=\"checked\" id={props.id} onChange={props.onchangeHandler} />\r\n    <label className=\"form-check-label\" htmlFor={props.id}>{props.label}</label>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Checkbox;\r\n\r\n\r\nCheckbox.propTypes = {\r\n  checked: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  onchangeHandler: PropTypes.func,\r\n  label: PropTypes.string\r\n};","import PropTypes from 'prop-types';\r\nconst Button = ({clickHandle, className, disabled = '', name}) => {\r\n  return (\r\n    <button onClick={clickHandle} className={className} disabled={disabled} type=\"button\">{name}</button>\r\n  )\r\n}\r\nexport default Button;\r\n\r\n\r\nButton.propTypes = {\r\n  inputValue: PropTypes.func,\r\n  className: PropTypes.string,\r\n  disabled: PropTypes.string,\r\n  name: PropTypes.string\r\n};","\r\nimport {React} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Input({placeholder = '', value = '', onChange = (e) => void 0}){\r\n  return (\r\n    <input  className=\"form-control\" type=\"text\" placeholder={placeholder} value={value} onChange={(e) => onChange(e)} />\r\n  )\r\n}\r\n\r\n\r\nInput.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};","import {React, useRef} from \"react\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport Deletebutton from '../Deletebutton';\r\nimport Checkbox from '../Checkbox';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../Input\";\r\n\r\nexport default function Task({inputValue = '', onChangeInput, onAdd, todos, onCheck, onDel, todoID, onDelAllTasks, actionModalDelete}){\r\n\r\n  const ref = useRef();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 mt-2\">\r\n          <Button name=\"Удалить все задачи\" clickHandle={onDelAllTasks} className={todos.task.length ? \"btn btn-info\" : \"btn btn-info disabled\"} disabled={todos.task.length ? '' : 'disabled'} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3 mt-3\">\r\n            <Input\r\n              placeholder = \"Добавить задачу\"\r\n              value = {inputValue}\r\n              onChange = {onChangeInput}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <Button name=\"Добавить\" clickHandle={() => onAdd(ref)} className={inputValue.length ? \"btn btn-info\" : \"btn btn-info disabled\"} disabled={inputValue.length ? '' : 'disabled'} />\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Задачи\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {todos.task.length ? (\r\n                todos.task.map((todo) => {\r\n                  let liClass = 'list-group-item';\r\n                  let aClass = 'text-dark';\r\n                  if(todo.checked){\r\n                    liClass = 'list-group-item bg-info text-light';\r\n                    aClass = 'text-white';\r\n                  }\r\n\r\n                  if(todo.id === todoID){\r\n                    liClass = 'list-group-item bg-warning text-dark';\r\n                    aClass = 'text-dark';\r\n                  }\r\n                  \r\n                  \r\n                  return (<li key={todo.id} className={liClass}>\r\n                    <div className=\"row align-items-center\">\r\n                      <div className=\"col-6\">\r\n                        <Link to={'/todos/' + todo.id} className={aClass}>\r\n                          {todo.title}\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <Checkbox checked={todo.checked} id={\"checkbox\"+todo.id} onchangeHandler={(e) => onCheck(e, todo.id)} label=\"Выполнено\"/>\r\n                      </div>\r\n                      <div className=\"col-2 text-center\">\r\n                        <Deletebutton title=\"Удалить задачу\" clickHandle={() => onDel(todo.id, todo.title)} />\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  )\r\n                })\r\n              ) : (\r\n                <li className=\"list-group-item\">Задач нет</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTask.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  onChangeInput: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  todos: PropTypes.object,\r\n  onCheck: PropTypes.func,\r\n  onDel: PropTypes.func,\r\n  todoID: PropTypes.number,\r\n  onDelAllTasks: PropTypes.func\r\n};\r\n\r\n","const storageName = 'react-categories';\r\n\r\nconst initState = {category: localStorage.getItem(storageName) ? JSON.parse(localStorage.getItem(storageName)) : []};\r\n\r\n\r\nconst actionType = {\r\n  ADD_CAT: 'ADD_CAT',\r\n  DELETE_CAT: 'DEL_CAT',\r\n  CHECK_CAT: 'CHECK_CAT',\r\n  DELETE_ALL_CATEGORIES: 'DELETE_ALL_CATEGORIES'\r\n  // SET_TODOS: 'SET_TODOS'\r\n}\r\n\r\nexport const actionCreateCategory = (payload) => {\r\n  return {\r\n    type: actionType.ADD_CAT,\r\n    payload\r\n  }\r\n}\r\nexport const actionDelCategory = (payload) => {\r\n  return {\r\n    type: actionType.DELETE_CAT,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const actionCheckCategory = (checked, id) => {\r\n  return {\r\n    type: actionType.CHECK_CAT,\r\n    checked,\r\n    id\r\n  }\r\n}\r\n\r\nexport const actionDeleteAllCategories = () => {\r\n  return {\r\n    type: actionType.DELETE_ALL_CATEGORIES\r\n  }\r\n};\r\n\r\nconst updateCategories = (cats) => {\r\n  localStorage.setItem(storageName, JSON.stringify(cats));\r\n}\r\n\r\n\r\n\r\n\r\nconst categoryReducer = (state = initState, action = false) => {\r\n  let categories;\r\n  switch (action.type){\r\n    case actionType.ADD_CAT:\r\n      categories = {...state, category: [...state.category, action.payload]};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    case actionType.DELETE_CAT:\r\n      categories = {...state, category: state.category.filter((cat) => {\r\n        if(cat.id !== action.payload)\r\n          return cat;\r\n        else\r\n          return false;\r\n      })};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    case actionType.CHECK_CAT:\r\n      categories = {...state, category: state.category.map((cat) => {\r\n        if(cat.id === action.id)\r\n          cat.checked = action.checked\r\n        return cat;\r\n      })};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    case actionType.DELETE_ALL_CATEGORIES:\r\n      categories = {...state, category: []};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default categoryReducer;","import {createContext} from 'react';\r\n\r\nexport const Context = createContext()","const initState = [];\r\n\r\nconst actionType = {\r\n  SHOW_MODAL: 'SHOW_MODAL',\r\n  HIDE_MODAL: 'HIDE_MODAL',\r\n}\r\n\r\nexport const actionShowModal = (payload) => {\r\n  return {\r\n    type: actionType.SHOW_MODAL,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const actionHideModal = () => {\r\n  return {\r\n    type: actionType.HIDE_MODAL\r\n  }\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case actionType.SHOW_MODAL:\r\n      return [...state, action.payload]\r\n    case actionType.HIDE_MODAL:\r\n      state.splice(-1, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {React, useContext, useState} from \"react\";\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport { actionCheckTodo, actionCreateTodo, actionDeleteAllTasks, actionDelTodo } from '../store/todos';\r\n// import { connect } from \"react-redux\";\r\nimport Task from '../components/Task';\r\nimport { actionDeleteAllCategories } from \"../store/category\";\r\nimport { Context } from \"../contextContext\";\r\nimport { actionShowModal } from \"../store/modals\";\r\n\r\n\r\nexport default function TaskContainer(){\r\n  const todos = useSelector((state) => state.task);\r\n  const dispatch = useDispatch();\r\n  const context = useContext(Context);\r\n  const todoID = context.todoID;\r\n\r\n  const [change, setChange] = useState('');\r\n\r\n  const handlerChangeInput = (e) => {\r\n    setChange(e.target.value);\r\n  }\r\n\r\n  const handlerAddToDo = (ref) => {\r\n    const data = {\r\n      title: change,\r\n      id: Date.now(),\r\n      checked: false\r\n    }\r\n    dispatch(actionCreateTodo(data));\r\n    setChange('');\r\n    // ref.current.focus();\r\n  }\r\n\r\n  const handlerDelToDo = (id, title) => {\r\n    // dispatch(actionDelTodo(id));\r\n    dispatch(actionShowModal({name: 'ModalDelete', id: id, modalText: `Вы действительно хотите удалить <b>${title}</b>?`, deleteFunc: actionDelTodo}));\r\n  }\r\n\r\n  const handlerCheckToDo = (event, id) => {\r\n    dispatch(actionCheckTodo(event.target.checked, id));\r\n  }\r\n\r\n  const handlerDelAllTasks = () => {\r\n    dispatch(actionDeleteAllTasks());\r\n    dispatch(actionDeleteAllCategories());\r\n  }\r\n\r\n  // const setTodosThunk = () => {\r\n  //   dispatch(getTodosThunk());\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   setTodosThunk();\r\n  // }, []);\r\n\r\n  return (\r\n    <Task\r\n      inputValue = {change}\r\n      onChangeInput = {handlerChangeInput}\r\n      onAdd = {handlerAddToDo}\r\n      todos={todos}\r\n      onCheck = {handlerCheckToDo}\r\n      onDel = {handlerDelToDo}\r\n      todoID = {todoID}\r\n      onDelAllTasks = {handlerDelAllTasks}\r\n    />\r\n  )\r\n}\r\n\r\n\r\n// class TaskContainer extends React.Component {\r\n//   state = {\r\n//     change: \"\",\r\n//   };\r\n\r\n//   handlerChangeInput = (e) => {\r\n//     console.log(e.target.value);\r\n//     this.setState({ change: e.target.value });\r\n//   }\r\n\r\n//   handlerAddToDo = () => {\r\n//     const data = {\r\n//       title: this.state.change,\r\n//       id: Date.now(),\r\n//       checked: false\r\n//     }\r\n//     this.props.handlerAddTodo(data);\r\n//     this.setState({ change: \"\" });\r\n//   }\r\n\r\n//   handlerDelToDo = (id) => {\r\n//     this.props.handlerDelTodo(id);\r\n//   }\r\n\r\n//   handlerCheckToDo = (event, id) => {\r\n//     this.props.handlerCheckToDo(event.target.checked, id);\r\n//   }\r\n\r\n//   render() {\r\n//     const { todos } = this.props;\r\n//     return (\r\n//       <Task\r\n//         inputValue = {this.state.change}\r\n//         onChangeInput = {this.handlerChangeInput}\r\n//         onAdd = {this.handlerAddToDo}\r\n//         todos={todos}\r\n//         onCheck = {this.handlerCheckToDo}\r\n//         onDel = {this.handlerDelToDo}\r\n//       />\r\n//     );\r\n//   }\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     todos: state.task,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     handlerAddTodo: (payload) => dispatch(actionCreateTodo(payload)),\r\n//     handlerDelTodo: (payload) => dispatch(actionDelTodo(payload)),\r\n//     handlerCheckToDo: (checked, id) => dispatch(actionCheckTodo(checked, id))\r\n//   };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(TaskContainer);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Progressbar({percent = 0, maxPercent = 100}) {\r\n  return (\r\n    <div className=\"progress\">\r\n      <div className=\"progress-bar progress-bar-striped progress-bar-animated bg-info\" role=\"progressbar\" style={{width: percent + '%'}} aria-valuenow={percent} aria-valuemin=\"0\" aria-valuemax={maxPercent}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProgressbar.propTypes = {\r\n  percent: PropTypes.number,\r\n  maxPercent: PropTypes.number\r\n};","import {React, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../Input'\r\n\r\nexport default function SearchCategory() {\r\n  const [value, setValue] = useState('');\r\n  const history = useHistory();\r\n  const url = new URL(window.location.href);\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n\r\n  const handlerSetUrlValue = (e) => {\r\n    const setUrlValue = url.searchParams.set(\"search\", `${e.target.value}`);\r\n    history.replace(url.search.replace(setUrlValue));\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      placeholder = 'Поиск...'\r\n      value = {value ? value : urlParams.get('search') ? urlParams.get('search') : ''}\r\n      onChange = {handlerSetUrlValue}\r\n    />\r\n  )\r\n}\r\n","import {React, useRef} from \"react\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport Deletebutton from '../Deletebutton';\r\nimport Checkbox from '../Checkbox';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\nimport Progressbar from \"../ProgressBar\";\r\nimport Input from \"../Input\";\r\nimport SearchCategory from \"../SearchCategory\";\r\n\r\nexport default function Category({inputValue = '', onChangeInput, onAdd, categories, onCheck, onDel, taskPercents}){\r\n  const ref = useRef();\r\n  // const ref = React.createRef();\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3 mt-3\">\r\n            <Input\r\n              placeholder = \"Добавить категорию\"\r\n              value = {inputValue}\r\n              onChange = {onChangeInput}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <Button name=\"Добавить\" clickHandle={() => onAdd(ref)} className={inputValue.length ? \"btn btn-info\" : \"btn btn-info disabled\"} disabled={inputValue.length ? '' : 'disabled'} />\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n          <Progressbar\r\n            percent = {taskPercents}\r\n          />\r\n\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Категории\r\n              <div className=\"mt-3\">\r\n                <SearchCategory/>\r\n              </div>\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {categories.category.length ? (\r\n                categories.category.map((category) => <li key={category.id} className={category.checked ? 'list-group-item bg-info text-light' : 'list-group-item'}>\r\n                    <div className=\"row align-items-center\">\r\n                      <div className=\"col-6\">\r\n                        {category.title}\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <Checkbox checked={category.checked} id={\"checkbox\"+category.id} onchangeHandler={(e) => onCheck(e, category.id)} label=\"Выполнено\"/>\r\n                      </div>\r\n                      <div className=\"col-2 text-center\">\r\n                        <Deletebutton title=\"Удалить категорию\" clickHandle={() => onDel(category.id, category.title)} />\r\n                      </div>\r\n                    </div>\r\n                </li>\r\n                )\r\n              ) : (\r\n                <li className=\"list-group-item\">Категорий нет</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCategory.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  onChangeInput: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  categories: PropTypes.object,\r\n  onCheck: PropTypes.func,\r\n  onDel: PropTypes.func,\r\n  taskPercents: PropTypes.number\r\n};","import {React, useCallback, useContext, useMemo, useState} from \"react\";\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport { actionCheckCategory, actionCreateCategory, actionDelCategory} from '../store/category';\r\nimport Category from '../components/Category';\r\nimport { Context } from \"../contextContext\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { actionShowModal } from \"../store/modals\";\r\n\r\nexport default function CategoryContainer(){\r\n  const categories = useSelector((state) => state.category);\r\n  const context = useContext(Context);\r\n  const todoID = context.todoID;\r\n  const dispatch = useDispatch();\r\n  const [change, setChange] = useState('');\r\n\r\n  const location = useLocation();\r\n  const getValueSearch = new URLSearchParams(location.search).get('search');\r\n\r\n\r\n  const handlerChangeInput = (e) => {\r\n    setChange(e.target.value);\r\n  }\r\n\r\n  const handlerAddToDo = (ref) => {\r\n    const data = {\r\n      title: change,\r\n      id: Date.now(),\r\n      checked: false,\r\n      todoID\r\n    }\r\n    dispatch(actionCreateCategory(data));\r\n    setChange('');\r\n    // ref.current.focus();\r\n  }\r\n\r\n  const handlerDelToDo = (id, title) => {\r\n    dispatch(actionShowModal({name: 'ModalDelete', id: id, modalText: `Вы действительно хотите удалить <b>${title}</b>?`, deleteFunc: actionDelCategory}));\r\n  }\r\n\r\n  const handlerCheckToDo = (event, id) => {\r\n    dispatch(actionCheckCategory(event.target.checked, id));\r\n  }\r\n\r\n  const taskPercents = useMemo(() => {\r\n    const todoCategory = categories.category.filter((item) => item.todoID === todoID);\r\n    const checkedCategory = todoCategory.filter((item) => item.checked);\r\n    const percent = (100 * checkedCategory.length) / todoCategory.length;\r\n    return !!percent ? percent : 0;\r\n  }, [categories, todoID]);\r\n\r\n  const findCurrentCategories = (cats, todoID, valueSearch) => {\r\n    if(valueSearch)\r\n      cats = cats.filter((item) => item.title.toLowerCase().includes(valueSearch.toLowerCase()));\r\n\r\n    return cats.filter((item) => item.todoID === todoID)\r\n  }\r\n  \r\n  const getCurrentCategories = useCallback(\r\n    () => {\r\n      return findCurrentCategories(categories.category, todoID, getValueSearch)\r\n    },\r\n    [categories, todoID, getValueSearch]\r\n  );\r\n\r\n  return (\r\n    <Category\r\n      inputValue = {change}\r\n      onChangeInput = {handlerChangeInput}\r\n      onAdd = {handlerAddToDo}\r\n      categories={{category:getCurrentCategories()}}\r\n      onCheck = {handlerCheckToDo}\r\n      onDel = {handlerDelToDo}\r\n      taskPercents = {taskPercents}\r\n    />\r\n  )\r\n}","import {React} from 'react';\r\nimport TaskContainer from '../../container/taskContainer';\r\nimport CategoryContainer from '../../container/categoryContainer';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport {Context} from '../../contextContext/index';\r\n\r\nexport const Profile = () => {\r\n  const match = useRouteMatch('/todos/:id');\r\n  const todoID = !!match && match.params.id ? +match.params.id : 0;\r\n  return (\r\n    <Context.Provider value={{\r\n      todoID\r\n    }}>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className={!!match ? 'col-6' : 'col-12'}>\r\n          <TaskContainer/>\r\n        </div>\r\n        {!!match ? (\r\n          <div className=\"col-6\">\r\n            <CategoryContainer/>\r\n          </div>\r\n        ) : (\r\n          null\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n    </Context.Provider>\r\n  )\r\n};","import React from 'react';\r\n\r\nexport const Settings = () => {\r\n  return <div>Settings</div>;\r\n};","import React from 'react';\r\n\r\nexport const User = () => {\r\n  return <div>User</div>;\r\n};","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Profile } from \"../components/Profiile\";\r\nimport { Settings } from \"../components/Settings\";\r\nimport { User } from \"../components/User\";\r\n\r\nexport const HomePage = () => {\r\n  return <Switch>\r\n    <Route path=\"/user\" component={User} />\r\n    <Route path=\"/settings\" component={Settings} />\r\n    <Route path=\"/todos\" component={Profile} />\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport ModalDelete from './ModalDelete';\r\nimport './style.css';\r\n\r\nconst modalCollections = {\r\n  ModalDelete\r\n};\r\n\r\nexport default function Modals() {\r\n  const modal = useSelector(state => state.modalsReducer);\r\n  \r\n  if(!modal.length)\r\n    return null;\r\n\r\n\r\n  return (\r\n    modal.map((item) => {\r\n      const CurrentModal = modalCollections[item.name];\r\n      return <CurrentModal {...item} key={item.name}/>;\r\n    })\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actionHideModal } from '../../../store/modals';\r\nimport Button from '../../Button'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ModalDelete(props) {\r\n  const dispatch = useDispatch();\r\n  const handlerDelete = () => {\r\n    dispatch(actionHideModal());\r\n    dispatch(props.deleteFunc(props.id))\r\n  }\r\n  const handlerHideModal = () => {\r\n    dispatch(actionHideModal());\r\n  }\r\n  return (\r\n    <div className=\"modal fade show\" style={{opacity:1, display:\"block\"}} tabIndex=\"-1\" role=\"dialog\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{props.modalTitle ? props.modalTitle : 'Удаление'}</h5>\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={handlerHideModal}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\" >\r\n            <p dangerouslySetInnerHTML={{__html: props.modalText ? props.modalText : 'Вы действительно хотите удалить элемент?'}}/>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n          <Button\r\n            name=\"Удалить\"\r\n            clickHandle={handlerDelete}\r\n            className=\"btn btn-danger\"\r\n            disabled=''\r\n          />\r\n          <Button\r\n            name=\"Закрыть\"\r\n            clickHandle={handlerHideModal}\r\n            className=\"btn btn-secondary\"\r\n            disabled=''\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nModalDelete.propTypes = {\r\n  modalTitle: PropTypes.string,\r\n  modalText: PropTypes.string,\r\n  deleteFunc: PropTypes.func\r\n}","import React from 'react';\nimport Header from './components/Header';\nimport { HomePage } from './pages';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modals from './components/Modals';\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <HomePage/>\n      <Modals/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n// import thunk from 'redux-thunk';\r\nimport categoryReducer from './category';\r\nimport taskReducer from './todos';\r\nimport modalsReducer from './modals';\r\n// const middleware = [];\r\n\r\nconst rootReducer = combineReducers({\r\n  task: taskReducer,\r\n  category: categoryReducer,\r\n  modalsReducer\r\n})\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(rootReducer, composeWithDevTools());\r\n  return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\nimport { Provider } from 'react-redux';\n// import { createStore, compose, applyMiddleware } from 'redux';\nimport {configureStore} from './store';\n\n// const store = createStore(\n//   rootReducer,\n//   applyMiddleware(thunk),\n//   compose(\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// )\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}