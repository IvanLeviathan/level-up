{"version":3,"sources":["components/Header/index.jsx","store/todos/index.js","components/Checkbox/index.jsx","components/Button/index.jsx","components/Input/index.jsx","components/Task/index.jsx","store/category/index.js","contextContext/index.js","store/modals/index.js","container/taskContainer.js","components/ProgressBar/index.jsx","components/SearchCategory/index.jsx","components/Category/index.jsx","container/categoryContainer.js","components/Profiile/index.jsx","components/Settings/index.jsx","components/User/index.jsx","pages/index.jsx","components/Textarea/index.jsx","components/Modals/ModalEditCategory/index.jsx","components/Modals/ModalEditTask/index.jsx","components/Modals/index.js","components/Modals/ModalDelete/index.jsx","container/modalEditTaskContainer.js","container/modalEditCategoryContainer.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["Header","className","activeClassName","to","storageName","initState","task","localStorage","getItem","JSON","parse","actionType","actionDelTodo","payload","type","updateTasks","tasks","setItem","stringify","taskReducer","state","action","filter","todo","id","map","checked","item","taskId","title","Checkbox","props","value","onChange","onchangeHandler","htmlFor","label","Button","clickHandle","disabled","name","onClick","dangerouslySetInnerHTML","__html","Input","ref","placeholder","e","forwardRef","Task","inputValue","onChangeInput","onAdd","todos","onCheck","onDel","todoID","onDelAllTasks","onEdit","actionModalDelete","useRef","length","liClass","aClass","editButtonClass","category","actionDelCategory","updateCategories","cats","categoryReducer","categories","cat","todoId","description","Context","createContext","actionShowModal","reducer","splice","TaskContainer","useSelector","dispatch","useDispatch","useContext","useState","change","setChange","target","data","Date","now","current","focus","event","actionCheckTodo","modalText","deleteFunc","Progressbar","percent","maxPercent","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","SearchCategory","setValue","history","useHistory","url","URL","window","location","href","urlParams","URLSearchParams","search","get","setUrlValue","searchParams","set","replace","Category","taskPercents","CategoryContainer","useLocation","getValueSearch","useMemo","todoCategory","getCurrentCategories","useCallback","valueSearch","toLowerCase","includes","findCurrentCategories","actionCheckCategory","Profile","match","useRouteMatch","params","Provider","Settings","User","HomePage","path","component","Textarea","onChangeHandler","rows","ModalEditCategory","opacity","display","tabIndex","modalTitle","aria-label","handlerHideModal","aria-hidden","handlerChangeInput","checkboxChecked","handlerOnCheck","handlerChangeDescription","handlerChangeTodo","handlerEditTask","ModalEditTask","modalCollections","ModalDelete","ModalEditTaskContainer","findTodo","find","ModalEditCategoryContainer","findCategory","setTodoId","setChecked","setDescription","Modals","modal","modalsReducer","CurrentModal","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.975ca9a7.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './styles.css'\r\nconst Header = () => {  \r\n  return (\r\n    <header className=\"bg-dark text-light\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>ToDo App alpha alpha version</p>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n              <div className=\"navbar-nav\">\r\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/user\">User</NavLink>\r\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/settings\">Settings</NavLink>\r\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/todos\">Todos</NavLink>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header;","const storageName = 'react-tasks';\r\n\r\nconst initState = {task: localStorage.getItem(storageName) ? JSON.parse(localStorage.getItem(storageName)) : []};\r\n\r\n\r\nconst actionType = {\r\n  ADD_TASK: 'ADD_TASK',\r\n  DEL_TASK: 'DEL_TASK',\r\n  CHECK_TASK: 'CHECK_TASK',\r\n  DELETE_ALL_TASKS: 'DELETE_ALL_TASKS',\r\n  EDIT_TASK: 'EDIT_TASK'\r\n  // SET_TODOS: 'SET_TODOS'\r\n}\r\n\r\nexport const actionCreateTodo = (payload) => {\r\n  return {\r\n    type: actionType.ADD_TASK,\r\n    payload\r\n  }\r\n}\r\nexport const actionDelTodo = (payload) => {\r\n  return {\r\n    type: actionType.DEL_TASK,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const actionCheckTodo = (checked, id) => {\r\n  return {\r\n    type: actionType.CHECK_TASK,\r\n    checked,\r\n    id\r\n  }\r\n}\r\n\r\nexport const actionDeleteAllTasks = () => {\r\n  return {\r\n    type: actionType.DELETE_ALL_TASKS\r\n  }\r\n}\r\n\r\nexport const actionEditTask = (payload) => {\r\n  return {\r\n    type: actionType.EDIT_TASK,\r\n    payload\r\n  }\r\n}\r\n\r\nconst updateTasks = (tasks) => {\r\n  localStorage.setItem(storageName, JSON.stringify(tasks));\r\n}\r\n\r\n\r\n// const actionSetTodos = (payload) => {\r\n//   console.log(payload);\r\n//   return {\r\n//     type: actionType.SET_TODOS,\r\n//     payload\r\n//   }\r\n// }\r\n\r\nconst taskReducer = (state = initState, action) => {\r\n  let tasks;\r\n  switch (action.type){\r\n    case actionType.ADD_TASK:\r\n      tasks = {...state, task: [...state.task, action.payload]};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    case actionType.DEL_TASK:\r\n      tasks = {...state, task: state.task.filter((todo) => {\r\n        if(todo.id !== action.payload)\r\n          return todo;\r\n        else\r\n          return false;\r\n      })};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    case actionType.CHECK_TASK:\r\n      tasks = {...state, task: state.task.map((todo) => {\r\n        if(todo.id === action.id)\r\n          todo.checked = action.checked\r\n        \r\n        return todo;\r\n      })};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    // case actionType.SET_TODOS:\r\n    //   return {...state, task: [...state.task, ...action.payload]}\r\n    case actionType.DELETE_ALL_TASKS:\r\n      tasks = {...state, task: []};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    case actionType.EDIT_TASK:\r\n      tasks = {...state, task: state.task.map((item) => item.id === action.payload.taskId ? {...item, title: action.payload.title} : item)};\r\n      updateTasks(tasks.task);\r\n      return tasks;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// export const getTodosThunk = () => (dispatch) => {\r\n//   try{  \r\n//     fetch('https://jsonplaceholder.typicode.com/todos/')\r\n//       .then(response => response.json())\r\n//       .then(json => dispatch(actionSetTodos(json)));\r\n//   }catch(e){\r\n//     console.log(e);\r\n//   }\r\n// } \r\n\r\nexport default taskReducer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Checkbox = (props) => {\r\n  return (\r\n  <div className=\"form-check\">\r\n    <input className=\"form-check-input\" type=\"checkbox\" checked={props.checked ? 'checked': ''} value=\"checked\" id={props.id} onChange={props.onchangeHandler} />\r\n    <label className=\"form-check-label\" htmlFor={props.id}>{props.label}</label>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Checkbox;\r\n\r\n\r\nCheckbox.propTypes = {\r\n  checked: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  onchangeHandler: PropTypes.func,\r\n  label: PropTypes.string\r\n};","import PropTypes from 'prop-types';\r\nconst Button = ({clickHandle, className, disabled = '', name}) => {\r\n  return (\r\n    <button onClick={clickHandle} className={className} disabled={disabled} type=\"button\" dangerouslySetInnerHTML={{__html: name}}/>\r\n  )\r\n}\r\nexport default Button;\r\n\r\n\r\nButton.propTypes = {\r\n  inputValue: PropTypes.func,\r\n  className: PropTypes.string,\r\n  disabled: PropTypes.string,\r\n  name: PropTypes.string\r\n};","\r\nimport {forwardRef, React} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Input({placeholder = '', value = '', onChange = (e) => void 0}, ref){\r\n  return (\r\n    <input ref={ref} className=\"form-control\" type=\"text\" placeholder={placeholder} value={value} onChange={(e) => onChange(e)} />\r\n  )\r\n}\r\n\r\nexport default forwardRef(Input);\r\n\r\nInput.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};","import {React, useRef} from \"react\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport Checkbox from '../Checkbox';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../Input\";\r\n\r\nexport default function Task({inputValue = '', onChangeInput, onAdd, todos, onCheck, onDel, todoID, onDelAllTasks, actionModalDelete, onEdit}){\r\n  const ref = useRef();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 mt-2\">\r\n          <Button name=\"Удалить все задачи\" clickHandle={onDelAllTasks} className={todos.task.length ? \"btn btn-info\" : \"btn btn-info disabled\"} disabled={todos.task.length ? '' : 'disabled'} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3 mt-3\">\r\n            <Input\r\n              placeholder = \"Добавить задачу\"\r\n              value = {inputValue}\r\n              onChange = {onChangeInput}\r\n              ref={ref}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <Button name=\"Добавить\" clickHandle={() => onAdd(ref)} className={inputValue.length ? \"btn btn-info\" : \"btn btn-info disabled\"} disabled={inputValue.length ? '' : 'disabled'} />\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Задачи\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {todos.task.length ? (\r\n                todos.task.map((todo) => {\r\n                  let liClass = 'list-group-item';\r\n                  let aClass = 'text-dark';\r\n                  let editButtonClass = 'btn btn-outline-info';\r\n                  if(todo.checked){\r\n                    liClass = 'list-group-item bg-info text-light';\r\n                    aClass = 'text-white';\r\n                    editButtonClass = 'btn btn-outline-light';\r\n                  }\r\n\r\n                  if(todo.id === todoID){\r\n                    liClass = 'list-group-item bg-primary text-light';\r\n                    aClass = 'text-light';\r\n                    editButtonClass = 'btn btn-outline-light';\r\n                  }\r\n\r\n                  return (<li key={todo.id} className={liClass}>\r\n                    <div className=\"row align-items-center\">\r\n                      <div className=\"col-5\">\r\n                        <Link to={'/todos/' + todo.id} className={aClass}>\r\n                          {todo.title}\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <Checkbox checked={todo.checked} id={\"checkbox\"+todo.id} onchangeHandler={(e) => onCheck(e, todo.id)} label=\"Выполнено\"/>\r\n                      </div>\r\n                      <div className=\"col-3 text-center d-flex justify-content-between\">\r\n                        <Button\r\n                          name='<i class=\"bi bi-pencil\"></i>'\r\n                          clickHandle={() => onEdit(todo.id)}\r\n                          className={editButtonClass}\r\n                        />\r\n                        <Button\r\n                          name='<i class=\"bi bi-trash\"></i>'\r\n                          clickHandle={() => onDel(todo.id, todo.title)}\r\n                          className=\"btn btn-danger\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  )\r\n                })\r\n              ) : (\r\n                <li className=\"list-group-item\">Задач нет</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTask.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  onChangeInput: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  todos: PropTypes.object,\r\n  onCheck: PropTypes.func,\r\n  onDel: PropTypes.func,\r\n  todoID: PropTypes.number,\r\n  onDelAllTasks: PropTypes.func,\r\n  onEdit: PropTypes.func\r\n};\r\n\r\n","const storageName = 'react-categories';\r\n\r\nconst initState = {category: localStorage.getItem(storageName) ? JSON.parse(localStorage.getItem(storageName)) : []};\r\n\r\n\r\nconst actionType = {\r\n  ADD_CAT: 'ADD_CAT',\r\n  DELETE_CAT: 'DEL_CAT',\r\n  CHECK_CAT: 'CHECK_CAT',\r\n  DELETE_ALL_CATEGORIES: 'DELETE_ALL_CATEGORIES',\r\n  EDIT_CAT: 'EDIT_CAT'\r\n  // SET_TODOS: 'SET_TODOS'\r\n}\r\n\r\nexport const actionCreateCategory = (payload) => {\r\n  return {\r\n    type: actionType.ADD_CAT,\r\n    payload\r\n  }\r\n}\r\nexport const actionDelCategory = (payload) => {\r\n  return {\r\n    type: actionType.DELETE_CAT,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const actionCheckCategory = (checked, id) => {\r\n  return {\r\n    type: actionType.CHECK_CAT,\r\n    checked,\r\n    id\r\n  }\r\n}\r\n\r\nexport const actionDeleteAllCategories = () => {\r\n  return {\r\n    type: actionType.DELETE_ALL_CATEGORIES\r\n  }\r\n};\r\n\r\nexport const actionEditCategory = (payload) => {\r\n  return{\r\n    type: actionType.EDIT_CAT,\r\n    payload\r\n  }\r\n}\r\n\r\nconst updateCategories = (cats) => {\r\n  localStorage.setItem(storageName, JSON.stringify(cats));\r\n}\r\n\r\n\r\n\r\n\r\nconst categoryReducer = (state = initState, action = false) => {\r\n  let categories;\r\n  switch (action.type){\r\n    case actionType.ADD_CAT:\r\n      categories = {...state, category: [...state.category, action.payload]};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    case actionType.DELETE_CAT:\r\n      categories = {...state, category: state.category.filter((cat) => {\r\n        if(cat.id !== action.payload)\r\n          return cat;\r\n        else\r\n          return false;\r\n      })};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    case actionType.CHECK_CAT:\r\n      categories = {...state, category: state.category.map((cat) => {\r\n        if(cat.id === action.id)\r\n          cat.checked = action.checked\r\n        return cat;\r\n      })};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    case actionType.DELETE_ALL_CATEGORIES:\r\n      categories = {...state, category: []};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    case actionType.EDIT_CAT:\r\n      categories = {...state, category: state.category.map((item) => item.id === action.payload.taskId ? {...item, title: action.payload.title, todoID: action.payload.todoId, checked: action.payload.checked, description: action.payload.description} : item)};\r\n      updateCategories(categories.category);\r\n      return categories;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default categoryReducer;","import {createContext} from 'react';\r\n\r\nexport const Context = createContext()","const initState = [];\r\n\r\nconst actionType = {\r\n  SHOW_MODAL: 'SHOW_MODAL',\r\n  HIDE_MODAL: 'HIDE_MODAL',\r\n}\r\n\r\nexport const actionShowModal = (payload) => {\r\n  return {\r\n    type: actionType.SHOW_MODAL,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const actionHideModal = () => {\r\n  return {\r\n    type: actionType.HIDE_MODAL\r\n  }\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case actionType.SHOW_MODAL:\r\n      return [...state, action.payload]\r\n    case actionType.HIDE_MODAL:\r\n      state.splice(-1, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {React, useContext, useState} from \"react\";\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport { actionCheckTodo, actionCreateTodo, actionDeleteAllTasks, actionDelTodo } from '../store/todos';\r\n// import { connect } from \"react-redux\";\r\nimport Task from '../components/Task';\r\nimport { actionDeleteAllCategories } from \"../store/category\";\r\nimport { Context } from \"../contextContext\";\r\nimport { actionShowModal } from \"../store/modals\";\r\n\r\n\r\nexport default function TaskContainer(){\r\n  const todos = useSelector((state) => state.task);\r\n  const dispatch = useDispatch();\r\n  const context = useContext(Context);\r\n  const todoID = context.todoID;\r\n\r\n  const [change, setChange] = useState('');\r\n\r\n  const handlerChangeInput = (e) => {\r\n    setChange(e.target.value);\r\n  }\r\n\r\n  const handlerAddToDo = (ref) => {\r\n    const data = {\r\n      title: change,\r\n      id: Date.now(),\r\n      checked: false\r\n    }\r\n    dispatch(actionCreateTodo(data));\r\n    setChange('');\r\n    ref.current.focus();\r\n  }\r\n\r\n  const handlerDelToDo = (id, title) => {\r\n    // dispatch(actionDelTodo(id));\r\n    dispatch(actionShowModal({name: 'ModalDelete', id: id, modalText: `Вы действительно хотите удалить <b>${title}</b>?`, deleteFunc: actionDelTodo}));\r\n  }\r\n\r\n  const handlerEditTodo = (id) => {\r\n    dispatch(actionShowModal({name: 'ModalEditTaskContainer', id: id}));\r\n  }\r\n\r\n  const handlerCheckToDo = (event, id) => {\r\n    dispatch(actionCheckTodo(event.target.checked, id));\r\n  }\r\n\r\n  const handlerDelAllTasks = () => {\r\n    dispatch(actionDeleteAllTasks());\r\n    dispatch(actionDeleteAllCategories());\r\n  }\r\n\r\n  // const setTodosThunk = () => {\r\n  //   dispatch(getTodosThunk());\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   setTodosThunk();\r\n  // }, []);\r\n\r\n  return (\r\n    <Task\r\n      inputValue = {change}\r\n      onChangeInput = {handlerChangeInput}\r\n      onAdd = {handlerAddToDo}\r\n      todos={todos}\r\n      onCheck = {handlerCheckToDo}\r\n      onDel = {handlerDelToDo}\r\n      todoID = {todoID}\r\n      onDelAllTasks = {handlerDelAllTasks}\r\n      onEdit = {handlerEditTodo}\r\n    />\r\n  )\r\n}\r\n\r\n\r\n// class TaskContainer extends React.Component {\r\n//   state = {\r\n//     change: \"\",\r\n//   };\r\n\r\n//   handlerChangeInput = (e) => {\r\n//     console.log(e.target.value);\r\n//     this.setState({ change: e.target.value });\r\n//   }\r\n\r\n//   handlerAddToDo = () => {\r\n//     const data = {\r\n//       title: this.state.change,\r\n//       id: Date.now(),\r\n//       checked: false\r\n//     }\r\n//     this.props.handlerAddTodo(data);\r\n//     this.setState({ change: \"\" });\r\n//   }\r\n\r\n//   handlerDelToDo = (id) => {\r\n//     this.props.handlerDelTodo(id);\r\n//   }\r\n\r\n//   handlerCheckToDo = (event, id) => {\r\n//     this.props.handlerCheckToDo(event.target.checked, id);\r\n//   }\r\n\r\n//   render() {\r\n//     const { todos } = this.props;\r\n//     return (\r\n//       <Task\r\n//         inputValue = {this.state.change}\r\n//         onChangeInput = {this.handlerChangeInput}\r\n//         onAdd = {this.handlerAddToDo}\r\n//         todos={todos}\r\n//         onCheck = {this.handlerCheckToDo}\r\n//         onDel = {this.handlerDelToDo}\r\n//       />\r\n//     );\r\n//   }\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     todos: state.task,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     handlerAddTodo: (payload) => dispatch(actionCreateTodo(payload)),\r\n//     handlerDelTodo: (payload) => dispatch(actionDelTodo(payload)),\r\n//     handlerCheckToDo: (checked, id) => dispatch(actionCheckTodo(checked, id))\r\n//   };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(TaskContainer);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Progressbar({percent = 0, maxPercent = 100}) {\r\n  return (\r\n    <div className=\"progress\">\r\n      <div className=\"progress-bar progress-bar-striped progress-bar-animated bg-info\" role=\"progressbar\" style={{width: percent + '%'}} aria-valuenow={percent} aria-valuemin=\"0\" aria-valuemax={maxPercent}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProgressbar.propTypes = {\r\n  percent: PropTypes.number,\r\n  maxPercent: PropTypes.number\r\n};","import {React, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../Input'\r\n\r\nexport default function SearchCategory() {\r\n  const [value, setValue] = useState('');\r\n  const history = useHistory();\r\n  const url = new URL(window.location.href);\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n\r\n  const handlerSetUrlValue = (e) => {\r\n    const setUrlValue = url.searchParams.set(\"search\", `${e.target.value}`);\r\n    history.replace(url.search.replace(setUrlValue));\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      placeholder = 'Поиск...'\r\n      value = {value ? value : urlParams.get('search') ? urlParams.get('search') : ''}\r\n      onChange = {handlerSetUrlValue}\r\n    />\r\n  )\r\n}\r\n","import {React, useRef} from \"react\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport Checkbox from '../Checkbox';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\nimport Progressbar from \"../ProgressBar\";\r\nimport Input from \"../Input\";\r\nimport SearchCategory from \"../SearchCategory\";\r\n\r\nexport default function Category({inputValue = '', onChangeInput, onAdd, categories, onCheck, onDel, taskPercents, onEdit}){\r\n  const ref = useRef();\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"input-group mb-3 mt-3\">\r\n            <Input\r\n              placeholder = \"Добавить категорию\"\r\n              value = {inputValue}\r\n              onChange = {onChangeInput}\r\n              ref={ref}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <Button name=\"Добавить\" clickHandle={() => onAdd(ref)} className={inputValue.length ? \"btn btn-info\" : \"btn btn-info disabled\"} disabled={inputValue.length ? '' : 'disabled'} />\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n          <Progressbar\r\n            percent = {taskPercents}\r\n          />\r\n\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Категории\r\n              <div className=\"mt-3\">\r\n                <SearchCategory/>\r\n              </div>\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {categories.category.length ? (\r\n                categories.category.map((category) => <li key={category.id} className={category.checked ? 'list-group-item bg-info text-light' : 'list-group-item'}>\r\n                    <div className=\"row align-items-center\">\r\n                      <div className=\"col-5\" title={category.description}>\r\n                        {category.title}\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <Checkbox checked={category.checked} id={\"checkbox\"+category.id} onchangeHandler={(e) => onCheck(e, category.id)} label=\"Выполнено\"/>\r\n                      </div>\r\n                      <div className=\"col-3 text-center d-flex justify-content-between\">\r\n                        <Button\r\n                            name='<i class=\"bi bi-pencil\"></i>'\r\n                            clickHandle={() => onEdit(category.id)}\r\n                            className={category.checked ? \"btn btn-outline-light\" :\"btn btn-outline-info\"}\r\n                        />\r\n                        <Button\r\n                          name='<i class=\"bi bi-trash\"></i>'\r\n                          clickHandle={() => onDel(category.id, category.title)}\r\n                          className=\"btn btn-danger\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                </li>\r\n                )\r\n              ) : (\r\n                <li className=\"list-group-item\">Категорий нет</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCategory.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  onChangeInput: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  categories: PropTypes.object,\r\n  onCheck: PropTypes.func,\r\n  onDel: PropTypes.func,\r\n  onEdit: PropTypes.func\r\n};","import {React, useCallback, useContext, useMemo, useState} from \"react\";\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport { actionCheckCategory, actionCreateCategory, actionDelCategory} from '../store/category';\r\nimport Category from '../components/Category';\r\nimport { Context } from \"../contextContext\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { actionShowModal } from \"../store/modals\";\r\n\r\nfunction CategoryContainer(){\r\n  const categories = useSelector((state) => state.category);\r\n  const context = useContext(Context);\r\n  const todoID = context.todoID;\r\n  const dispatch = useDispatch();\r\n  const [change, setChange] = useState('');\r\n\r\n  const location = useLocation();\r\n  const getValueSearch = new URLSearchParams(location.search).get('search');\r\n\r\n\r\n  const handlerChangeInput = (e) => {\r\n    setChange(e.target.value);\r\n  }\r\n\r\n  const handlerAddToDo = (ref) => {\r\n    const data = {\r\n      title: change,\r\n      id: Date.now(),\r\n      checked: false,\r\n      todoID\r\n    }\r\n    dispatch(actionCreateCategory(data));\r\n    setChange('');\r\n    ref.current.focus();\r\n  }\r\n\r\n  const handlerDelToDo = (id, title) => {\r\n    dispatch(actionShowModal({name: 'ModalDelete', id: id, modalText: `Вы действительно хотите удалить <b>${title}</b>?`, deleteFunc: actionDelCategory}));\r\n  }\r\n\r\n  const handlerEditCategory = (id) => {\r\n    dispatch(actionShowModal({name: 'ModalEditCategoryContainer', id: id}));\r\n  }\r\n\r\n  const handlerCheckToDo = (event, id) => {\r\n    dispatch(actionCheckCategory(event.target.checked, id));\r\n  }\r\n\r\n  const taskPercents = useMemo(() => {\r\n    const todoCategory = categories.category.filter((item) => item.todoID === todoID);\r\n    const checkedCategory = todoCategory.filter((item) => item.checked);\r\n    const percent = (100 * checkedCategory.length) / todoCategory.length;\r\n    return !!percent ? percent : 0;\r\n  }, [categories, todoID]);\r\n\r\n  const findCurrentCategories = (cats, todoID, valueSearch) => {\r\n    if(valueSearch)\r\n      cats = cats.filter((item) => item.title.toLowerCase().includes(valueSearch.toLowerCase()));\r\n\r\n    return cats.filter((item) => item.todoID === todoID)\r\n  }\r\n  \r\n  const getCurrentCategories = useCallback(\r\n    () => {\r\n      return findCurrentCategories(categories.category, todoID, getValueSearch)\r\n    },\r\n    [categories, todoID, getValueSearch]\r\n  );\r\n\r\n  return (\r\n    <Category\r\n      inputValue = {change}\r\n      onChangeInput = {handlerChangeInput}\r\n      onAdd = {handlerAddToDo}\r\n      categories={{category:getCurrentCategories()}}\r\n      onCheck = {handlerCheckToDo}\r\n      onDel = {handlerDelToDo}\r\n      onEdit = {handlerEditCategory}\r\n      taskPercents = {taskPercents}\r\n    />\r\n  )\r\n}\r\nexport default CategoryContainer;\r\n","import {React} from 'react';\r\nimport TaskContainer from '../../container/taskContainer';\r\nimport CategoryContainer from '../../container/categoryContainer';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport {Context} from '../../contextContext/index';\r\n\r\nexport const Profile = () => {\r\n  const match = useRouteMatch('/todos/:id');\r\n  const todoID = !!match && match.params.id ? +match.params.id : 0;\r\n  return (\r\n    <Context.Provider value={{\r\n      todoID\r\n    }}>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className={!!match ? 'col-6' : 'col-12'}>\r\n          <TaskContainer/>\r\n        </div>\r\n        {!!match ? (\r\n          <div className=\"col-6\">\r\n            <CategoryContainer/>\r\n          </div>\r\n        ) : (\r\n          null\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n    </Context.Provider>\r\n  )\r\n};","import React from 'react';\r\n\r\nexport const Settings = () => {\r\n  return <div>Settings</div>;\r\n};","import React from 'react';\r\n\r\nexport const User = () => {\r\n  return <div>User</div>;\r\n};","import { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Profile } from \"../components/Profiile\";\r\nimport { Settings } from \"../components/Settings\";\r\nimport { User } from \"../components/User\";\r\n\r\nexport const HomePage = () => {\r\n  return <Switch>\r\n    <Route path=\"/user\" component={User} />\r\n    <Route path=\"/settings\" component={Settings} />\r\n    <Route path=\"/todos\" component={Profile} />\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default function Textarea({value = '', onChangeHandler=(e) => void 0}) {\r\n  return (\r\n    <textarea className=\"form-control\" rows=\"3\" onChange={onChangeHandler} value={value}/>\r\n  )\r\n}\r\n\r\nTextarea.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeHandler: PropTypes.func\r\n}\r\n\r\n","import React from 'react'\r\nimport Button from '../../Button'\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../../Input';\r\nimport './style.css';\r\nimport Checkbox from '../../Checkbox';\r\nimport Textarea from '../../Textarea';\r\n\r\nexport default function ModalEditCategory(props) {\r\n  return (\r\n    <div className=\"modal fade show\" style={{opacity:1, display:\"block\"}} tabIndex=\"-1\" role=\"dialog\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{props.modalTitle ? props.modalTitle : `Редактирование категории \"${props.value}\"`}</h5>\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={props.handlerHideModal}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\" >\r\n            <div className=\"form-group\">\r\n              <label>Название категории</label>\r\n              <Input\r\n                placeholder = 'Редактировать'\r\n                value={props.value}\r\n                onChange={props.handlerChangeInput}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Checkbox checked={props.checkboxChecked} id={\"checkboxmodal\"+props.category.id} onchangeHandler={(e) => props.handlerOnCheck(e)} label=\"Выполнено\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Описание категории</label>\r\n              <Textarea value={props.description} onChangeHandler={(e) => props.handlerChangeDescription(e)} />\r\n            </div>\r\n            <h5 className=\"mt-3\">Сменить задачу</h5>\r\n            <div className=\"list-group mt-2\">\r\n              {props.todos.task.map((item) => {\r\n                return (\r\n                  <div key={item.id}>\r\n                    <input type=\"radio\" name=\"category\" value={item.id} id={`cat${item.id}`} className=\"d-none\" onChange={props.handlerChangeTodo} checked={item.id === props.todoID ? 'checked' : ''}/>\r\n                    <label htmlFor={`cat${item.id}`} className=\"list-group-item list-group-item-action mb-0\">{item.title}</label>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <Button\r\n              name=\"Редактировать\"\r\n              clickHandle={props.handlerEditTask}\r\n              className=\"btn btn-info\"\r\n              disabled=''\r\n            />\r\n            <Button\r\n              name=\"Закрыть\"\r\n              clickHandle={props.handlerHideModal}\r\n              className=\"btn btn-secondary\"\r\n              disabled=''\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nModalEditCategory.propTypes = {\r\n  modalTitle: PropTypes.string,\r\n  modalText: PropTypes.string,\r\n  editFunc: PropTypes.func,\r\n  handlerHideModal: PropTypes.func\r\n}\r\n","import React from 'react'\r\nimport Button from '../../Button'\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../../Input';\r\n\r\nexport default function ModalEditTask(props) {\r\n  return (\r\n    <div className=\"modal fade show\" style={{opacity:1, display:\"block\"}} tabIndex=\"-1\" role=\"dialog\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{props.modalTitle ? props.modalTitle : 'Редактирование'}</h5>\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={props.handlerHideModal}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\" >\r\n            <Input\r\n              placeholder = 'Редактировать'\r\n              value={props.value}\r\n              onChange={props.handlerChangeInput}\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <Button\r\n              name=\"Редактировать\"\r\n              clickHandle={props.handlerEditTask}\r\n              className=\"btn btn-info\"\r\n              disabled=''\r\n            />\r\n            <Button\r\n              name=\"Закрыть\"\r\n              clickHandle={props.handlerHideModal}\r\n              className=\"btn btn-secondary\"\r\n              disabled=''\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nModalEditTask.propTypes = {\r\n  modalTitle: PropTypes.string,\r\n  modalText: PropTypes.string,\r\n  editFunc: PropTypes.func,\r\n  handlerHideModal: PropTypes.func\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ModalEditCategoryContainer from '../../container/modalEditCategoryContainer';\r\nimport ModalEditTaskContainer from '../../container/modalEditTaskContainer';\r\nimport { actionHideModal } from '../../store/modals';\r\nimport ModalDelete from './ModalDelete';\r\nimport './style.css';\r\n\r\nconst modalCollections = {\r\n  ModalDelete,\r\n  ModalEditTaskContainer,\r\n  ModalEditCategoryContainer\r\n};\r\n\r\n\r\nexport default function Modals() {\r\n  const modal = useSelector(state => state.modalsReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  if(!modal.length)\r\n    return null;\r\n  \r\n  const handlerHideModal = () => {\r\n    dispatch(actionHideModal());\r\n  }\r\n\r\n  return (\r\n    modal.map((item) => {\r\n      const CurrentModal = modalCollections[item.name];\r\n      return <CurrentModal {...item} handlerHideModal={handlerHideModal} key={item.name}/>;\r\n    })\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '../../Button'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ModalDelete(props) {\r\n  const dispatch = useDispatch();\r\n  const handlerDelete = () => {\r\n    props.handlerHideModal();\r\n    dispatch(props.deleteFunc(props.id))\r\n  }\r\n  return (\r\n    <div className=\"modal fade show\" style={{opacity:1, display:\"block\"}} tabIndex=\"-1\" role=\"dialog\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{props.modalTitle ? props.modalTitle : 'Удаление'}</h5>\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={props.handlerHideModal}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\" >\r\n            <p dangerouslySetInnerHTML={{__html: props.modalText ? props.modalText : 'Вы действительно хотите удалить элемент?'}}/>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n          <Button\r\n            name=\"Удалить\"\r\n            clickHandle={handlerDelete}\r\n            className=\"btn btn-danger\"\r\n            disabled=''\r\n          />\r\n          <Button\r\n            name=\"Закрыть\"\r\n            clickHandle={props.handlerHideModal}\r\n            className=\"btn btn-secondary\"\r\n            disabled=''\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nModalDelete.propTypes = {\r\n  modalTitle: PropTypes.string,\r\n  modalText: PropTypes.string,\r\n  deleteFunc: PropTypes.func,\r\n  handlerHideModal: PropTypes.func\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ModalEditTask from '../components/Modals/ModalEditTask'\r\nimport { actionEditTask } from '../store/todos';\r\n\r\nexport default function ModalEditTaskContainer(props) {\r\n  const todos = useSelector((state) => state.task);\r\n  const findTodo = todos.task.find((item) => item.id === props.id);\r\n  const [value, setValue] = useState(findTodo.title);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerChangeInput = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handlerEditTask = () => {\r\n    const data = {\r\n      title: value,\r\n      taskId: props.id\r\n    }\r\n    dispatch(actionEditTask(data));\r\n    props.handlerHideModal();\r\n  }\r\n\r\n  return <ModalEditTask {...props} todo={findTodo} value={value} handlerChangeInput={handlerChangeInput} handlerEditTask={handlerEditTask} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ModalEditCategory from '../components/Modals/ModalEditCategory';\r\nimport { actionEditCategory } from '../store/category';\r\n\r\n\r\nexport default function ModalEditCategoryContainer(props) {\r\n  const categories = useSelector((state) => state.category);\r\n  const todos = useSelector((state) => state.task);\r\n  const findCategory = categories.category.find((item) => item.id === props.id);\r\n  const [value, setValue] = useState(findCategory.title);\r\n  const [todoID, setTodoId] = useState(findCategory.todoID);\r\n  const [checked, setChecked] = useState(findCategory.checked);\r\n  const [description, setDescription] = useState(findCategory.description);\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerChangeInput = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handlerChangeTodo = (e) => {\r\n    setTodoId(+e.target.value);\r\n  }\r\n\r\n  const handlerEditCategory = () => {\r\n    const data = {\r\n      title: value,\r\n      taskId: props.id,\r\n      todoId: todoID,\r\n      checked: checked,\r\n      description: description\r\n    }\r\n    dispatch(actionEditCategory(data));\r\n    props.handlerHideModal();\r\n  }\r\n\r\n  const handlerCheckCategory = (event) => {\r\n    setChecked(event.target.checked);\r\n  }\r\n\r\n  const handlerChangeDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  return <ModalEditCategory \r\n    {...props}\r\n    todos={todos}\r\n    todoID={todoID}\r\n    category={findCategory}\r\n    value={value}\r\n    checkboxChecked={checked}\r\n    description={description}\r\n    handlerChangeDescription={handlerChangeDescription}\r\n    handlerOnCheck={handlerCheckCategory}\r\n    handlerChangeInput={handlerChangeInput}\r\n    handlerEditTask={handlerEditCategory}\r\n    handlerChangeTodo={handlerChangeTodo}\r\n  />\r\n}\r\n","import React from 'react';\nimport Header from './components/Header';\nimport { HomePage } from './pages';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modals from './components/Modals';\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <HomePage/>\n      <Modals/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n// import thunk from 'redux-thunk';\r\nimport categoryReducer from './category';\r\nimport taskReducer from './todos';\r\nimport modalsReducer from './modals';\r\n// const middleware = [];\r\n\r\nconst rootReducer = combineReducers({\r\n  task: taskReducer,\r\n  category: categoryReducer,\r\n  modalsReducer\r\n})\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(rootReducer, composeWithDevTools());\r\n  return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\nimport { Provider } from 'react-redux';\n// import { createStore, compose, applyMiddleware } from 'redux';\nimport {configureStore} from './store';\n\n// const store = createStore(\n//   rootReducer,\n//   applyMiddleware(thunk),\n//   compose(\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// )\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}